DROP DATABASE IF EXISTS GTI619;

-- Creation de la base de données
CREATE DATABASE GTI619;

USE GTI619;

-- Création de la table des roles
CREATE TABLE ROLE

DROP DATABASE IF EXISTS GTI619;

-- Creation de la base de données
CREATE DATABASE GTI619;

USE GTI619;

-- Création de la table des roles
CREATE TABLE ROLE
(
IDE_ROLE int NOT NULL AUTO_INCREMENT,
TYPE_ROLE VARCHAR(100)  NOT NULL,
DESC_ROLE VARCHAR(100)  NOT NULL,

PRIMARY KEY (IDE_ROLE)
);


-- Création de la table des utilisateurs
CREATE TABLE UTILS
(
IDE_UTILS INTEGER  AUTO_INCREMENT NOT NULL,
NOM_UTILS VARCHAR(100)  NOT NULL,
PRENM_UTILS VARCHAR(100)  NOT NULL,
MAIL_UTILS VARCHAR(100)  NOT NULL,
TELPH_UTILS VARCHAR(10)  NOT NULL,


IDE_ROLE INT NOT NULL,

PRIMARY KEY (IDE_UTILS),

CONSTRAINT fk_ROLE FOREIGN KEY (IDE_ROLE)
REFERENCES ROLE(IDE_ROLE),
 UNIQUE (MAIL_UTILS,TELPH_UTILS )
);


-- Création de la table des MDP
CREATE TABLE MDP
(
IDE_MDP int NOT NULL AUTO_INCREMENT,
MDP VARCHAR(60)  NOT NULL,

-- AUDIT
DTAE_CRETN DATE NOT NULL,
DATE_MODIF DATE,
ETAT_MDP VARCHAR(10) NOT  NULL,
	
IDE_UTILS INT NOT NULL,

PRIMARY KEY (IDE_MDP),

CONSTRAINT fk_UTILS FOREIGN KEY (IDE_UTILS)
REFERENCES UTILS (IDE_UTILS)
-- CONSTRAINT 'MDP_ETAT' CHECK (ETAT_MDP) IN ('ACTIVE','NON ACTIVE')   
);

/*
CREATE TRIGGER MDP_TRIG_BIU BEFORE INSERT OR UPDATE ON MDP
  FOR EACH ROW
  BEGIN
	IF(INSERT) THEN
		SET NEW.DTAE_CRETN = SYSDATE();
	ELSE IF(UPDATE) THEN
		SET NEW.DATE_MODIF = SYSDATE();
	END IF;
  END;
END;*/
